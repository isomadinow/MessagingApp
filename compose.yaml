services:
  db:
    image: postgres:17.2
    container_name: messaging_db
    environment:
      POSTGRES_USER: messaging_user
      POSTGRES_PASSWORD: messaging_pass
      POSTGRES_DB: messaging_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U messaging_user -d messaging_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: MessagingApp.API/Dockerfile
    container_name: messaging_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: "http://*:5050"
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=messaging_db;Username=messaging_user;Password=messaging_pass"
    ports:
      - "5050:5050"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 10s
      retries: 5
      start_period: 5s

volumes:
  pgdata:
